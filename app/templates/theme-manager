<?php

namespace {NAMESPACE};

use Timber\Timber;

/**
 * Class ThemeManager
 * @package {NAMESPACE}
 */
class ThemeManager {

  public static $timber;

  /**
   * Theme support setter
   */
  public static function setSupport()
  {
    add_theme_support('html5');
    add_theme_support('custom-logo');
    add_theme_support('post-thumbnails');
    add_theme_support('post-formats', ['gallery', 'link', 'image', 'quote', 'video', 'audio']);
  }

  /**
   * Handles scripts and styles enqueueing
   */
  public static function enqueueAssets()
  {
    wp_enqueue_style('main-style', get_template_directory_uri() . '/assets/main.css');
    wp_enqueue_script('main-script', get_template_directory_uri() . '/assets/main.js', [], '1.0.0', true);
  }

  /**
   * Hides pages from admin menu
   */
  public static function hideMenuPages()
  {
    remove_menu_page('edit-comments.php'); // just an example
  }

  /**
   * Overrides ACF exports directory
   * @return string
   */
  public static function enableCustomFieldsAutosave()
  {
    return get_stylesheet_directory() . '/app/fields';
  }

  /**
   * Overrides ACF exports directory
   * @param $paths
   * @return array
   */
  public static function enableCustomFieldsAutoload($paths)
  {
    $paths[0] = get_stylesheet_directory() . '/app/fields';
    return $paths;
  }

  /**
   * Initializes custom fields
   */
  public static function initCustomFields()
  {
    add_filter('acf/settings/load_json', __NAMESPACE__ . '\ThemeManager::enableCustomFieldsAutoload');

    if (defined('ACF_AUTOSAVE') && ACF_AUTOSAVE) {
      add_filter('acf/settings/save_json', __NAMESPACE__ . '\ThemeManager::enableCustomFieldsAutosave');
    }

    if (function_exists('acf_add_options_page')) {
      acf_add_options_page([
        'page_title' => __('Theme Options', '{TEXT_DOMAIN}'),
        'menu_title' => __('Theme Options', '{TEXT_DOMAIN}'),
        'menu_slug' => 'theme-options',
        'capability' => 'edit_posts',
        'redirect' => false
      ]);
    }
  }

  /**
   * Adds Twig StringLoader extension
   * @param $twig
   * @return mixed
   */
  public static function addStringLoaderExtension($twig)
  {
    $twig->addExtension(new \Twig_Extension_StringLoader());
    return $twig;
  }

  /**
   * Templates directory setter
   */
  public static function setTemplatesDirectory()
  {
    Timber::$dirname = 'templates';
  }

  /**
   * Global context setter
   * @param $context
   * @return mixed
   */
  public static function setGlobalContext($context)
  {
    $context['env'] = defined('WP_ENV') ? WP_ENV : 'production';
    $context['options'] = function_exists('acf_add_options_page') ? get_fields('theme-options') : [];
    return $context;
  }

  /**
   * Sets theme configurations
   */
  public static function init()
  {
    // initializing Timber
    self::$timber = new Timber();

    // loading theme's features
    self::loadFeature('post-types');
    self::loadFeature('taxonomies');
    self::loadFeature('terms/**');
    self::loadFeature('services/**');
    self::loadFeature('menu');
    self::loadFeature('shortcodes/**');

    // setting theme's configurations
    self::setTemplatesDirectory();
    add_filter('timber/twig', __NAMESPACE__ . '\ThemeManager::addStringLoaderExtension');
    add_filter('timber/context', __NAMESPACE__ . '\ThemeManager::setGlobalContext');
    add_action('init', __NAMESPACE__ . '\ThemeManager::setSupport');
    add_action('admin_menu', __NAMESPACE__ . '\ThemeManager::hideMenuPages');
    add_action('wp_enqueue_scripts', __NAMESPACE__ . '\ThemeManager::enqueueAssets');

    if (class_exists('acf')) {
      self::initCustomFields();
    }
  }

  /**
   * Theme's features loader
   * @param string $path
   */
  private static function loadFeature($path)
  {
    foreach (glob(__DIR__ . '/' . $path . '/*.php') as $feature) {
      require($feature);
    }
  }
}
